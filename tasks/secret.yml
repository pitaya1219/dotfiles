version: '3'

vars:
  DB_PATH: tasks/config.db

tasks:
  default:
    silent: true
    cmds:
      - task -t tasks/secret.yml --list

  set:*:*:
    desc: "Set a key-value pair (Usage: task set:key:value)"
    silent: true
    cmds:
      - sqlite3 {{.DB_PATH}} "INSERT OR REPLACE INTO secret(key, value) VALUES('{{index .MATCH 0}}', '{{index .MATCH 1}}');"

  get:*:
    desc: "Get value by key (Usage: task get:key)"
    silent: true
    ignore_error: true
    cmds:
      - |
        value=$(sqlite3 {{.DB_PATH}} "SELECT value END FROM secret WHERE key='{{index .MATCH 0}}';")
        if [ -z "${value}" ]; then
          echo "❌ Key '{{index .MATCH 0}}' not found." >&2
          exit 1
        else
          if [ "{{.SHOW_SECRET_VALUE}}" == "1" ]; then
            echo "${value}"
          else
            echo '***'
          fi
        fi

  delete:*:
    desc: "Delete a key-value pair (Usage: task delete:key)"
    silent: true
    cmds:
      - sqlite3 {{.DB_PATH}} "DELETE FROM secret WHERE key='{{index .MATCH 0}}';"
    prompt: "This will delete {{index .MATCH 0}}. Are you sure?"

  exists:*:
    desc: "Check if key exists (Usage: task exists:key)"
    silent: true
    cmds:
      - sqlite3 --table {{.DB_PATH}} "SELECT CASE WHEN EXISTS(SELECT 1 FROM secret WHERE key='{{index .MATCH 0}}') THEN 'EXISTS' ELSE 'NOT_FOUND' END;"

  list:
    desc: "List all keys (values hidden for security)"
    silent: true
    cmds:
      - sqlite3 --table {{.DB_PATH}} "SELECT key, '***' AS value FROM secret ORDER BY key;"

  count:
    desc: "Count total number of entries"
    silent: true
    cmds:
      - sqlite3 --table {{.DB_PATH}} "SELECT COUNT(*) FROM secret;"

  find:*:
    desc: "Find keys with partial match (Usage: task find:searchterm)"
    silent: true
    cmds:
      - sqlite3 --table {{.DB_PATH}} "SELECT key, '***' AS value FROM secret WHERE key LIKE '%{{index .MATCH 0}}%' ORDER BY key;"
